---
AWSTemplateFormatVersion: 2010-09-09
Description: "Creates VPC and gateway for automated LAMP stack."

Parameters:
  VpcCIDR:
    Description: VPC CIDR
    Type: String
    Default: 10.1.0.0/16
  PublicSubnet1CIDR:
    Description: CIDR for the public subnet 1
    Type: String
    Default: 10.1.10.0/24
  PublicSubnet2CIDR:
    Description: CIDR for the public subnet 2
    Type: String
    Default: 10.1.20.0/24
  PrivateSubnet1CIDR:
    Description: CIDR for the private subnet 1
    Type: String
    Default: 10.1.30.0/24
  PrivateSubnet2CIDR:
    Description: CIDR for the private subnet 2
    Type: String
    Default: 10.1.40.0/24
  ProductTag:
    Type: String
    Default: automated-lamp
    Description: tag for resource naming/billing tracking

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub VPC-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
      - Key: Name
        Value: !Sub Internet-Gateway-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub public-subnet-az1-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub public-subnet-az2-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub private-subnet-az2-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub private-subnet-az2-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPAddress.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: !Sub NAT-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'
  ElasticIPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub Public-RT-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub Private-RT-${AWS::StackName}
      - Key: Product
        Value: !Ref 'ProductTag'

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
Outputs:
  VPC:
    Description: Automated LAMP VPC
    Value: !Ref 'VPC'
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  PublicSubnet1:
    Description: Public subnet az1
    Value: !Ref 'PublicSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1'
  PublicSubnet2:
    Description: Public subnet az2
    Value: !Ref 'PublicSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2'
  PrivateSubnet1:
    Description: Private subnet az1
    Value: !Ref 'PrivateSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1'
  PrivateSubnet2:
    Description: Private subnet az2
    Value: !Ref 'PrivateSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2'